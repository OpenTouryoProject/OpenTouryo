//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DPQuery_Tool.Resources {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DPQuery_Tool.Resources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   app.Config parameter has not been set. : に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string AppConfigParameterNotSet {
            get {
                return ResourceManager.GetString("AppConfigParameterNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Check Error was : {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CheckExceptionError {
            get {
                return ResourceManager.GetString("CheckExceptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Closing process に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ClosingProcess {
            get {
                return ResourceManager.GetString("ClosingProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Entry point : {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EntryPoint {
            get {
                return ResourceManager.GetString("EntryPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Escape character was not set. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EscCharacterNotSet {
            get {
                return ResourceManager.GetString("EscCharacterNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Data tier definition information file format error : There was no table name. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FileFormatError {
            get {
                return ResourceManager.GetString("FileFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic Generation Completed ! に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FileGenComplete {
            get {
                return ResourceManager.GetString("FileGenComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Check error: Database type information file [{0}] does not exist. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilenotExistDBtypeInfo {
            get {
                return ResourceManager.GetString("FilenotExistDBtypeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Check error: Data tier definition information file [{0}] does not exist. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilenotExistDlayerInfo {
            get {
                return ResourceManager.GetString("FilenotExistDlayerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Check error: .NET type information file [{0}] does not exist. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string FilenotExistNETtypeInfo {
            get {
                return ResourceManager.GetString("FilenotExistNETtypeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Root folder of the input file (template file) does not exist. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InputFileRootFolderNotExist {
            get {
                return ResourceManager.GetString("InputFileRootFolderNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Invalid Format に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InvalidFormat {
            get {
                return ResourceManager.GetString("InvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   &quot;[Log output text]&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string LogOutputText {
            get {
                return ResourceManager.GetString("LogOutputText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There was no saved configuration file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MSG_CONFIG_FILE_NOT_EXIST {
            get {
                return ResourceManager.GetString("MSG_CONFIG_FILE_NOT_EXIST", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dynamic parameterized query was executed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MSG_EXEC_DQP {
            get {
                return ResourceManager.GetString("MSG_EXEC_DQP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Static parameterized query was executed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MSG_EXEC_SPQ {
            get {
                return ResourceManager.GetString("MSG_EXEC_SPQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enter the IP address of the database server に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MSG_INPUT_IP {
            get {
                return ResourceManager.GetString("MSG_INPUT_IP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enter the login account to the database: Password に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MSG_INPUT_PWD {
            get {
                return ResourceManager.GetString("MSG_INPUT_PWD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enter the login account to the database: User ID に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MSG_INPUT_UID {
            get {
                return ResourceManager.GetString("MSG_INPUT_UID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Are you sure you want to save this query file? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MSG_IS_QUERY_FILE_SAVED {
            get {
                return ResourceManager.GetString("MSG_IS_QUERY_FILE_SAVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There were no columns available to generate screens. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Nocolumns {
            get {
                return ResourceManager.GetString("Nocolumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There was no time stamp column name. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NoTimestampColName {
            get {
                return ResourceManager.GetString("NoTimestampColName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CSV file (*.csv)|*.csv に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string OpenFileDialogFilter {
            get {
                return ResourceManager.GetString("OpenFileDialogFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Data tier definition information file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string OpenFileDialogTitle {
            get {
                return ResourceManager.GetString("OpenFileDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Root folder (Dao class file, SQL file. Etc) of the output file does not exist. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string OutputFileRootFolderNotExist {
            get {
                return ResourceManager.GetString("OutputFileRootFolderNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specifies the root folder path (Dao file, SQL file) of the output file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string OutputFolderPath {
            get {
                return ResourceManager.GetString("OutputFolderPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [Performance information - execution process] に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PerformanceExecution {
            get {
                return ResourceManager.GetString("PerformanceExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Primary Keys were not set to the table : に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PKnotAvailable {
            get {
                return ResourceManager.GetString("PKnotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please check Primary Keys were set to the Table or not. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PkSetMessgae {
            get {
                return ResourceManager.GetString("PkSetMessgae", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Primary key was not defined in the table. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PrimaryKeyNotDefined {
            get {
                return ResourceManager.GetString("PrimaryKeyNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Result に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Result {
            get {
                return ResourceManager.GetString("Result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run from a file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string RunFile {
            get {
                return ResourceManager.GetString("RunFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Run from TextBox に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string RunTextBox {
            get {
                return ResourceManager.GetString("RunTextBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Is a run-time error : {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string RuntimeError {
            get {
                return ResourceManager.GetString("RuntimeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The screens were generated automatically. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenGenerationSuccess {
            get {
                return ResourceManager.GetString("ScreenGenerationSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic control (Ran with auto-commit transaction mode.) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_AUTO_MODE_WAS_SELECTED {
            get {
                return ResourceManager.GetString("STATUS_AUTO_MODE_WAS_SELECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configured connection setting was loaded. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_CONFIGURATION_LOADED {
            get {
                return ResourceManager.GetString("STATUS_CONFIGURATION_LOADED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configured connection setting was saved. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_CONFIGURATION_SAVED {
            get {
                return ResourceManager.GetString("STATUS_CONFIGURATION_SAVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connection was closed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_CONNECTION_CLOSED {
            get {
                return ResourceManager.GetString("STATUS_CONNECTION_CLOSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connection was opened. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_CONNECTION_OPENED {
            get {
                return ResourceManager.GetString("STATUS_CONNECTION_OPENED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configured a new connection string setting. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_CREATE_CONFIGURATION {
            get {
                return ResourceManager.GetString("STATUS_CREATE_CONFIGURATION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The {0} data provider was selected. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_DATA_PROVIDER_SELECTED {
            get {
                return ResourceManager.GetString("STATUS_DATA_PROVIDER_SELECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initial state に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_INIT {
            get {
                return ResourceManager.GetString("STATUS_INIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Manual control (Manually control the transaction using this button.) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_MANUAL_MODE_WAS_SELECTED {
            get {
                return ResourceManager.GetString("STATUS_MANUAL_MODE_WAS_SELECTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Operation was canceled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_PROC_CANCELED {
            get {
                return ResourceManager.GetString("STATUS_PROC_CANCELED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Query was executed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_QUERY_EXECED {
            get {
                return ResourceManager.GetString("STATUS_QUERY_EXECED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Query file was closed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_QUERY_FILE_CLOSED {
            get {
                return ResourceManager.GetString("STATUS_QUERY_FILE_CLOSED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Query file was opened. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_QUERY_FILE_OPENED {
            get {
                return ResourceManager.GetString("STATUS_QUERY_FILE_OPENED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Modified query was saved to the query file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_QUERY_FILE_OVERWRITED {
            get {
                return ResourceManager.GetString("STATUS_QUERY_FILE_OVERWRITED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Query has been saved to a new query file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_QUERY_FILE_SAVED {
            get {
                return ResourceManager.GetString("STATUS_QUERY_FILE_SAVED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Transaction was committed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_TRANSACTION_COMMITED {
            get {
                return ResourceManager.GetString("STATUS_TRANSACTION_COMMITED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Transaction was rolled back. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_TRANSACTION_ROLLBACKED {
            get {
                return ResourceManager.GetString("STATUS_TRANSACTION_ROLLBACKED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Transaction was started. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string STATUS_TRANSACTION_STARTED {
            get {
                return ResourceManager.GetString("STATUS_TRANSACTION_STARTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Before [{0}], only indent can be specified. : {1} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string StringIndentation {
            get {
                return ResourceManager.GetString("StringIndentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Template file does not exist. : に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TempFilenotExists {
            get {
                return ResourceManager.GetString("TempFilenotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Specifies the root folder path of the input file (template file). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TemplateFolderPath {
            get {
                return ResourceManager.GetString("TemplateFolderPath", resourceCulture);
            }
        }
    }
}
