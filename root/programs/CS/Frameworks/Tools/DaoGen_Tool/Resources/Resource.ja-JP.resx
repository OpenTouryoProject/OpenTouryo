<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CautionPrerequisite" xml:space="preserve">
    <value>同一ＤＢ上で同一名の複数のテーブルを持たないこと（{0}用のＤ層自動生成ツールの仕様です）</value>
  </data>
  <data name="CautionPrerequisiteCaption" xml:space="preserve">
    <value>－注意（前提条件）－</value>
  </data>
  <data name="CautionPrerequisiteOracle" xml:space="preserve">
    <value>[{0}]スキーマ（ユーザ）の所有するテーブルのみを対象とします（Oracle用のＤ層自動生成ツールの仕様です）</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="DisplaySchemaInfoDialogBox" xml:space="preserve">
    <value>DBMSのスキーマ情報の表示（{0}）ダイアログ</value>
  </data>
  <data name="GotoNextTable" xml:space="preserve">
    <value>次のテーブルに進みます。</value>
  </data>
  <data name="MetadataInfo" xml:space="preserve">
    <value>メタデータ情報</value>
  </data>
  <data name="ReservedWordInfo" xml:space="preserve">
    <value>予約語情報</value>
  </data>
  <data name="RestrictionInfo" xml:space="preserve">
    <value>制限情報</value>
  </data>
  <data name="SaveFileDialogFilter" xml:space="preserve">
    <value>CSVファイル(*.csv)|*.csv</value>
  </data>
  <data name="SaveFileDialogTitle" xml:space="preserve">
    <value>D層定義情報ファイル</value>
  </data>
  <data name="SetPrimaryKeyInfo" xml:space="preserve">
    <value>主キー情報の設定（{0}）ダイアログ</value>
  </data>
  <data name="SummaryInfo" xml:space="preserve">
    <value>概要情報</value>
  </data>
  <data name="TableNameColDbTypeInfo" xml:space="preserve">
    <value>テーブル名,カラムDB型情報～</value>
  </data>
  <data name="TableNameColdotNetTypeInfo" xml:space="preserve">
    <value>テーブル名,カラム.NET型情報～</value>
  </data>
  <data name="TableNameColInfo" xml:space="preserve">
    <value>テーブル名,カラム情報～</value>
  </data>
  <data name="TypeInfo" xml:space="preserve">
    <value>型情報</value>
  </data>
  <data name="DlayerGeneratedMessage" xml:space="preserve">
    <value>Ｄ層定義情報の生成完了！</value>
  </data>
  <data name="TabPage1" xml:space="preserve">
    <value>タブ１</value>
  </data>
  <data name="TabPage1ColumnInfo" xml:space="preserve">
    <value>カラム情報</value>
  </data>
  <data name="TabPage1SchemaInfo" xml:space="preserve">
    <value>スキーマ情報</value>
  </data>
  <data name="TabPage1TableInfo" xml:space="preserve">
    <value>テーブル情報</value>
  </data>
  <data name="TabPage2" xml:space="preserve">
    <value>タブ２</value>
  </data>
  <data name="TabPage2PrimarykeyInfo" xml:space="preserve">
    <value>主キー情報</value>
  </data>
  <data name="TabPage2VieuxInfo" xml:space="preserve">
    <value>ヴュー情報</value>
  </data>
  <data name="EntryPoint" xml:space="preserve">
    <value>エントリポイント：</value>
  </data>
  <data name="AppConfigParameterNotSet" xml:space="preserve">
    <value>app.Configパラメタが設定されていません。：</value>
  </data>
  <data name="CheckExceptionError" xml:space="preserve">
    <value>チェックエラーです：</value>
  </data>
  <data name="EscCharacterNotSet" xml:space="preserve">
    <value>エスケープ文字が設定されていません。</value>
  </data>
  <data name="FileFormatError" xml:space="preserve">
    <value>D層定義情報ファイル・フォーマットエラー。テーブル名がありません。：</value>
  </data>
  <data name="FileGenComplete" xml:space="preserve">
    <value>自動生成完了！</value>
  </data>
  <data name="FilenotExistDBtypeInfo" xml:space="preserve">
    <value>チェックエラーです：DB型情報ファイル[{0}]が存在しません。</value>
  </data>
  <data name="FilenotExistDlayerInfo" xml:space="preserve">
    <value>チェックエラーです：D層定義情報ファイル[{0}]が存在しません。</value>
  </data>
  <data name="FilenotExistNETtypeInfo" xml:space="preserve">
    <value>チェックエラーです：.NET型情報ファイル[{0}]が存在しません。</value>
  </data>
  <data name="InputFileRootFolderNotExist" xml:space="preserve">
    <value>入力ファイル（テンプレート ファイル）のルート フォルダが存在しません。</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>不正なフォーマットです。</value>
  </data>
  <data name="NoTimestampColName" xml:space="preserve">
    <value>タイムスタンプ列名がありません。</value>
  </data>
  <data name="OpenFileDialogFilter" xml:space="preserve">
    <value>CSVファイル(*.csv)|*.csv</value>
  </data>
  <data name="OpenFileDialogTitle" xml:space="preserve">
    <value>D層定義情報ファイル</value>
  </data>
  <data name="OutputFileRootFolderNotExist" xml:space="preserve">
    <value>出力ファイル（Daoクラス ファイル、SQLファイル.etc）のルート フォルダが存在しません。</value>
  </data>
  <data name="OutputFolderPath" xml:space="preserve">
    <value>出力ファイル（Daoファイル、SQLファイル）のルート フォルダ パスを指定</value>
  </data>
  <data name="PrimaryKeyNotDefined" xml:space="preserve">
    <value>テーブルに主キーが定義されていません。</value>
  </data>
  <data name="RuntimeError" xml:space="preserve">
    <value>ランタイムエラーです：</value>
  </data>
  <data name="StringIndentation" xml:space="preserve">
    <value>の前には、インデントのみ指定できます。：</value>
  </data>
  <data name="TempFilenotExists" xml:space="preserve">
    <value>テンプレート ファイルが存在しません。：</value>
  </data>
  <data name="TemplateFolderPath" xml:space="preserve">
    <value>入力ファイル（テンプレート ファイル）のルート フォルダ パスを指定</value>
  </data>
  <data name="DLayerCancelledmessage" xml:space="preserve">
    <value>操作はキャンセルされました。</value>
  </data>
  <data name="ToolTipText" xml:space="preserve">
    <value>この項目は省略可能です。</value>
  </data>
</root>