@using MVC_Sample.Models.ViewModels
@using Touryo.Infrastructure.Public.Util
@model CrudModel

@{
    // ページタイトル
    ViewBag.Title = "CRUDサンプル（Html.BeginForm）";

    // マスターページ
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@* スクリプト・セクション（RenderSection("HeaderSection", required: true)に出力されます） *@
@section HeaderSection{
    <!-- Head 部の section -->
}

@* 本文レイアウト（RenderBodyに出力されます） *@
@* Html.BeginFormは従来の全体方式、Ajax.BeginFormは部分更新方式（UpdateTargetIdの範囲を部分更新） *@
@using (Html.BeginForm(null, "CrudMu2", FormMethod.Post, new { id = "form1", onsubmit = "Fx_OnSubmit();" }))
{
    <table style="width:100%; height:100%; border: none">
        <!-- データプロバイダ -->
        <tr>
            <td colspan="5">データアクセス制御クラス（データプロバイダ）を選択</td>
            <td colspan="5" rowspan="15" style="height: 100%">
                <div id="chartResult" style="width: 100%; height: 100%;">@Html.Partial("_ChartView")</div>
            </td>
        </tr>
        <tr>
            <td colspan="5">
                @* HTMLヘルパー（Html.DropDownListメソッド → selectタグを生成する） *@
                @Html.DropDownList("ddlDap", Model.DdlDapItems, new { style = "width: 100%" })
            </td>
        </tr>

        <!-- クエリ モード -->
        <tr>
            <td colspan="5">静的、動的のクエリ モードを選択（共通Dao選択時）</td>
        </tr>
        <tr>
            <td colspan="5">
                @* HTMLヘルパー（Html.DropDownListメソッド → selectタグを生成する） *@
                @Html.DropDownList("ddlMode1", Model.DdlMode1Items, new { style = "width: 100%" })
            </td>
        </tr>

        <!-- クエリ モード -->
        <tr>
            <td colspan="5">静的、動的のクエリ モードを選択</td>
        </tr>
        <tr>
            <td colspan="5">
                @* HTMLヘルパー（Html.DropDownListメソッド → selectタグを生成する） *@
                @Html.DropDownList("ddlMode2", Model.DdlMode2Items, new { style = "width: 100%" })
            </td>
        </tr>

        <!-- 分離レベル -->
        <tr>
            <td colspan="5">分離レベルを選択</td>
        </tr>
        <tr>
            <td colspan="5">
                @* HTMLヘルパー（Html.DropDownListメソッド → selectタグを生成する） *@
                @Html.DropDownList("ddlIso", Model.DdlIsoItems, new { style = "width: 100%", disabled = "disabled" })
            </td>
        </tr>

        <!-- コミット、ロールバック -->
        <tr>
            <td colspan="5">コミット、ロールバックを設定（例外発生時、ロールバック）</td>
        </tr>
        <tr>
            <td colspan="5">
                @* HTMLヘルパー（Html.DropDownListメソッド → selectタグを生成する） *@
                @Html.DropDownList("ddlExRollback", Model.DdlExRollbackItems, new { style = "width: 100%" })
            </td>
        </tr>

        <!-- 通信制御 -->
        <tr>
            <td colspan="5">通信制御</td>
        </tr>
        <tr>
            <td colspan="5">
                @* HTMLヘルパー（Html.DropDownListメソッド → selectタグを生成する） *@
                @Html.DropDownList("ddlTransmission", Model.DdlTransmissionItems, new { style = "width: 100%", disabled = "disabled" })
            </td>
        </tr>

        <!-- 明細 -->
        <tr>
            <td colspan="2">ShipperID：</td>
            <td colspan="3">
                @* HTMLヘルパー（Html.TextBoxメソッド → input type="text"タグを生成する） *@
                @Html.TextBox("textBox1", Model.InputValues == null ? null : Model.InputValues["textBox1"], new { style = "width: 100%" })
            </td>
        </tr>
        <tr>
            <td colspan="2">CompanyName：</td>
            <td colspan="3">
                @* HTMLヘルパー（Html.TextBoxメソッド → input type="text"タグを生成する） *@
                @Html.TextBox("textBox2", Model.InputValues == null ? null : Model.InputValues["textBox2"], new { style = "width: 100%" })
            </td>
        </tr>
        <tr>
            <td colspan="2">Phone：</td>
            <td colspan="3">
                @* HTMLヘルパー（Html.TextBoxメソッド → input type="text"タグを生成する） *@
                @Html.TextBox("textBox3", Model.InputValues == null ? null : Model.InputValues["textBox3"], new { style = "width: 100%" })
            </td>
        </tr>

        <!-- 並び替え対象列 -->
        <tr>
            <td colspan="2">並び替え対象列</td>
            <td colspan="3">
                @* HTMLヘルパー（Html.DropDownListメソッド → selectタグを生成する） *@
                @Html.DropDownList("ddlOrderColumn", Model.DdlOrderColumnItems, new { style = "width: 100%" })
            </td>
            <td colspan="5"><input type="submit" id="button10" style="width: 100%" value="クリア"/></td>
        </tr>

        <!-- 昇順・降順 -->
        <tr>
            <td colspan="2">昇順・降順</td>
            <td colspan="3">
                @* HTMLヘルパー（Html.DropDownListメソッド → selectタグを生成する） *@
                @Html.DropDownList("ddlOrderSequence", Model.DdlOrderSequenceItems, new { style = "width: 100%" })
            </td>
        </tr>

        <!-- 処理結果 -->
        <tr>
            <td colspan="2">処理結果：</td>
            <td colspan="3">
                <div id="messageResult">
                    @* HTMLヘルパー（Html.Partialメソッド → 部分viewで、部分更新されるエリア） *@
                    @Html.Partial("_MessageView")
                </div>
            </td>
        </tr>

        <!-- ボタン -->
        <tr>
            <td colspan="2"><input type="submit" id="button1" style="width: 100%" value="件数取得" formaction="@Url.Action("GetCount")" /></td>
            <td colspan="2"><input type="submit" id="button2" style="width: 100%" value="一覧取得（dt）" formaction="@Url.Action("SelectAll_DT")" /></td>
            <td colspan="2"><input type="submit" id="button3" style="width: 100%" value="一覧取得（ds）" formaction="@Url.Action("SelectAll_DS")" /></td>
            <td colspan="2"><input type="submit" id="button4" style="width: 100%" value="一覧取得（dr）" formaction="@Url.Action("SelectAll_DR")" /></td>
            <td colspan="2"><input type="submit" id="button5" style="width: 100%" value="一覧取得（動的SQL）" formaction="@Url.Action("SelectAll_DSQL")" /></td>
        </tr>
        <tr>
            <td colspan="2"><input type="submit" id="button6" style="width: 100%" value="一件参照" formaction="@Url.Action("Select")" /></td>
            <td colspan="2"><input type="submit" id="button7" style="width: 100%" value="追加" formaction="@Url.Action("Insert")" /></td>
            <td colspan="2"><input type="submit" id="button8" style="width: 100%" value="更新" formaction="@Url.Action("Update")" /></td>
            <td colspan="2"><input type="submit" id="button9" style="width: 100%" value="削除" formaction="@Url.Action("Delete")" /></td>
            <td colspan="2"></td>
        </tr>
        <tr>
            <td colspan="10"><label id="lblErrorMessage"></label></td>
        </tr>
        <tr>
            <td colspan="10"><input type="submit" id="button21" style="width: 100%" value="画面遷移（ポストバック後リダイレクト）" formaction="@Url.Action("Transitions")" /></td>
        </tr>
        <tr>
            <td colspan="10"><input type="submit" id="button22" style="width: 100%" value="二重送信防止" formaction="@Url.Action("PreventDoubleSubmission")" /></td>
        </tr>
    </table>
}

@* スクリプト・セクション（RenderSection("FooterSection", required: true)に出力されます） *@
@section FooterSection{
<script type="text/javascript">
    $('#button10').click(function () {
        // 結果をクリアする
        $('#chartResult').html('');

        // Form をサブミットしないよう、false を返す
        return false;
    });
</script>
}
