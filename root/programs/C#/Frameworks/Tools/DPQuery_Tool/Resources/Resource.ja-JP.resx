<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClosingProcess" xml:space="preserve">
    <value>クローズ処理</value>
  </data>
  <data name="EntryPoint" xml:space="preserve">
    <value>エントリポイント：</value>
  </data>
  <data name="LogOutputText" xml:space="preserve">
    <value>"【ログ出力テキスト】"</value>
  </data>
  <data name="MSG_CONFIG_FILE_NOT_EXIST" xml:space="preserve">
    <value>設定のセーブ ファイルが存在しません。</value>
  </data>
  <data name="MSG_EXEC_DQP" xml:space="preserve">
    <value>動的パラメタライズド・クエリを実行しました。</value>
  </data>
  <data name="MSG_EXEC_SPQ" xml:space="preserve">
    <value>通常のパラメタライズド・クエリを実行しました。</value>
  </data>
  <data name="MSG_INPUT_IP" xml:space="preserve">
    <value>データベースサーバのipアドレスを入力</value>
  </data>
  <data name="MSG_INPUT_PWD" xml:space="preserve">
    <value>データベースへのログインアカウントを入力：パスワード</value>
  </data>
  <data name="MSG_INPUT_UID" xml:space="preserve">
    <value>データベースへのログインアカウントを入力：ユーザID</value>
  </data>
  <data name="MSG_IS_QUERY_FILE_SAVED" xml:space="preserve">
    <value>クエリ ファイルをセーブしますか？</value>
  </data>
  <data name="Nocolumns" xml:space="preserve">
    <value>カラムが存在しないため、画面が生成できませんでした。</value>
  </data>
  <data name="PerformanceExecution" xml:space="preserve">
    <value>【性能情報－実行処理】</value>
  </data>
  <data name="PKnotAvailable" xml:space="preserve">
    <value>テーブルに主キーが設定されていません。</value>
  </data>
  <data name="PkSetMessgae" xml:space="preserve">
    <value>表に主キーが設定されているかご確認ください。</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>結果</value>
  </data>
  <data name="RunFile" xml:space="preserve">
    <value>ファイルから実行</value>
  </data>
  <data name="RunTextBox" xml:space="preserve">
    <value>TextBoxから実行</value>
  </data>
  <data name="ScreenGenerationSuccess" xml:space="preserve">
    <value>画面を自動生成しました。</value>
  </data>
  <data name="STATUS_AUTO_MODE_WAS_SELECTED" xml:space="preserve">
    <value>自動制御（自動コミット トランザクション モードで実行しました。）</value>
  </data>
  <data name="STATUS_CONFIGURATION_LOADED" xml:space="preserve">
    <value>接続設定をロードしました。</value>
  </data>
  <data name="STATUS_CONFIGURATION_SAVED" xml:space="preserve">
    <value>接続設定を保存しました。</value>
  </data>
  <data name="STATUS_CONNECTION_CLOSED" xml:space="preserve">
    <value>接続をクローズしました。</value>
  </data>
  <data name="STATUS_CONNECTION_OPENED" xml:space="preserve">
    <value>接続をオープンしました。</value>
  </data>
  <data name="STATUS_CREATE_CONFIGURATION" xml:space="preserve">
    <value>新規接続文字列の設定を作成しました。</value>
  </data>
  <data name="STATUS_INIT" xml:space="preserve">
    <value>初期状態</value>
  </data>
  <data name="STATUS_MANUAL_MODE_WAS_SELECTED" xml:space="preserve">
    <value>手動制御（ボタンを使用してトランザクションを手動で制御します）</value>
  </data>
  <data name="STATUS_PROC_CANCELED" xml:space="preserve">
    <value>処理をキャンセルしました。</value>
  </data>
  <data name="STATUS_QUERY_EXECED" xml:space="preserve">
    <value>クエリを実行しました。</value>
  </data>
  <data name="STATUS_QUERY_FILE_CLOSED" xml:space="preserve">
    <value>クエリファイルを閉じました。</value>
  </data>
  <data name="STATUS_QUERY_FILE_OPENED" xml:space="preserve">
    <value>クエリファイルを開きました。</value>
  </data>
  <data name="STATUS_QUERY_FILE_OVERWRITED" xml:space="preserve">
    <value>更新済みクエリをクエリファイルに保存しました。</value>
  </data>
  <data name="STATUS_QUERY_FILE_SAVED" xml:space="preserve">
    <value>クエリを新規クエリファイルに保存しました。</value>
  </data>
  <data name="STATUS_TRANSACTION_COMMITED" xml:space="preserve">
    <value>トランザクションをコミットしました。</value>
  </data>
  <data name="STATUS_TRANSACTION_ROLLBACKED" xml:space="preserve">
    <value>トランザクションをロールバックしました</value>
  </data>
  <data name="STATUS_TRANSACTION_STARTED" xml:space="preserve">
    <value>トランザクションを開始しました。</value>
  </data>
  <data name="AppConfigParameterNotSet" xml:space="preserve">
    <value>app.Configパラメタが設定されていません。：</value>
  </data>
  <data name="CheckExceptionError" xml:space="preserve">
    <value>チェックエラー：</value>
  </data>
  <data name="EscCharacterNotSet" xml:space="preserve">
    <value>エスケープ文字が設定されていません。</value>
  </data>
  <data name="FileFormatError" xml:space="preserve">
    <value>データ層定義情報ファイル・フォーマットエラー。テーブル名がありません。：</value>
  </data>
  <data name="FileGenComplete" xml:space="preserve">
    <value>自動生成完了！</value>
  </data>
  <data name="FilenotExistDBtypeInfo" xml:space="preserve">
    <value>チェックエラーです：データベース型情報ファイル[{0}]が存在しません。</value>
  </data>
  <data name="FilenotExistDlayerInfo" xml:space="preserve">
    <value>チェックエラーです：D層定義情報ファイル[{0}]が存在しません。</value>
  </data>
  <data name="FilenotExistNETtypeInfo" xml:space="preserve">
    <value>チェックエラーです：.NET型情報ファイル[{0}]が存在しません。</value>
  </data>
  <data name="InputFileRootFolderNotExist" xml:space="preserve">
    <value>入力ファイル（テンプレート ファイル）のルート フォルダが存在しません。</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>不正なフォーマットです。</value>
  </data>
  <data name="NoTimestampColName" xml:space="preserve">
    <value>タイムスタンプ列名がありません。</value>
  </data>
  <data name="OpenFileDialogFilter" xml:space="preserve">
    <value>CSVファイル(*.csv)|*.csv</value>
  </data>
  <data name="OpenFileDialogTitle" xml:space="preserve">
    <value>データ層定義情報ファイル</value>
  </data>
  <data name="OutputFileRootFolderNotExist" xml:space="preserve">
    <value>出力ファイル（Daoクラス ファイル、SQLファイル.etc）のルート フォルダが存在しません。</value>
  </data>
  <data name="OutputFolderPath" xml:space="preserve">
    <value>出力ファイル（Daoファイル、SQLファイル）のルート フォルダ パスを指定</value>
  </data>
  <data name="PrimaryKeyNotDefined" xml:space="preserve">
    <value>テーブルに主キーが定義されていません。</value>
  </data>
  <data name="RuntimeError" xml:space="preserve">
    <value>ランタイムエラーです：</value>
  </data>
  <data name="StringIndentation" xml:space="preserve">
    <value>[{0}] の前には、インデントのみ指定できます。: {1}</value>
  </data>
  <data name="TempFilenotExists" xml:space="preserve">
    <value>テンプレート ファイルが存在しません。：</value>
  </data>
  <data name="TemplateFolderPath" xml:space="preserve">
    <value>入力ファイル（テンプレート ファイル）のルート フォルダ パスを指定します。</value>
  </data>
  <data name="STATUS_DATA_PROVIDER_SELECTED" xml:space="preserve">
    <value>{0}データプロバイダーを選択しました。</value>
  </data>
</root>