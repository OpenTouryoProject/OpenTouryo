<?xml version="1.0" encoding="utf-8"?>
<!-- 
    メモ: このファイルを手動で編集する代わりに、Web 管理ツールを使用 
    してアプリケーションの設定を構成することができます。Visual Studio 
    の [Web サイト] メニューにある [ASP.NET 構成] オプションから設定
    を行ってください。設定およびコマンドの一覧は、通常
    \Windows\Microsoft.Net\Framework\v2.x\Config にある
    machine.config.comments で確認できます。
-->
<configuration>
  <!-- ajaxの設定（バージョンなどに注意する。） -->
  <!-- appSettingsの設定 -->
  <appSettings file="app.config" />
  <!-- connectionStringsの設定 -->
  <connectionStrings>
    <!-- SQL Server / SQL Client用 -->
    <add name="ConnectionString_SQL" connectionString="Data Source=localhost\sqlexpress;Initial Catalog=Northwind;Integrated Security=True;" />
    <!-- Multi-DB / OLEDB.NET用 -->
    <add name="ConnectionString_OLE" connectionString="Provider=SQLNCLI10.1;Data Source=localhost\sqlexpress;Integrated Security=SSPI;Initial Catalog=Northwind;" />
    <!-- Multi-DB / ODCB.NET用 -->
    <add name="ConnectionString_ODBC" connectionString="Dsn=odbc_test1" />
    <!-- Oracle / ODP.NET用 -->
    <add name="ConnectionString_ODP" connectionString="User Id=SCOTT;Password=tiger;Data Source=localhost/XE;" />
    <!-- DB2 / DB2.NET用 -->
    <add name="ConnectionString_DB2" connectionString="Server=localhost:50000;Database=SAMPLE;User ID=db2admin;Password=seigi@123" />
    <!-- HiRDB / HiRDBデータプロバイダ用 -->
    <add name="ConnectionString_HIR" connectionString="DataSource=C:\\Windows\\HiRDB.ini;UID=APPUSER;PWD=STDDB;" />
    <!-- MySQL / MySQL Connector/NET用 -->
    <add name="ConnectionString_MCN" connectionString="Server=localhost;Database=test;User Id=root;Password=seigi@123" />
    <!-- PostgreSQL / Npgsql用 -->
    <add name="ConnectionString_NPS" connectionString="HOST=localhost;DATABASE=postgres;USER ID=postgres;PASSWORD=seigi@123;" />
  </connectionStrings>
  <!-- ASP.NETのパラメータ -->
  <system.web>
    <!-- リリース時は、debug="false"に変更してください。 -->
    <compilation debug="true" targetFramework="4.6" />
    <!--
            グローバリゼーション
            globalization 要素
            http://msdn2.microsoft.com/ja-jp/library/hy4kkhe0.aspx
            http://msdn2.microsoft.com/ja-jp/library/hy4kkhe0(VS.80).aspx
            CultureInfo クラス
            http://msdn2.microsoft.com/ja-jp/library/system.globalization.cultureinfo.aspx
            http://msdn2.microsoft.com/ja-jp/library/system.globalization.cultureinfo(VS.80).aspx
            CultureInfo("ja")　と　CultureInfo("ja-JP") の違い
            http://blogs.wankuma.com/ogiogi/archive/2007/12/10/112403.aspx
    -->
    <globalization fileEncoding="utf-8" requestEncoding="utf-8" responseEncoding="utf-8" responseHeaderEncoding="utf-8" culture="ja-JP" uiCulture="ja-JP" />
    <!--
            セッションの設定
            本設定のパラメタは、別途検討すること。
            属性         : 目的
            timeout      : セッション状態プロバイダがセッションを終了するまでに、要求間で許容される時間 (分単位) を設定する。
            cookieless   : セッションIDをURLに埋め込む（true）か、cookie に格納する（false）かを設定する。
            mode         : 現在のセッション状態モードを設定する。
      
            詳細は、下記URLを参照のこと。
            http://msdn2.microsoft.com/ja-jp/library/h6bb9cz9.aspx
            http://msdn2.microsoft.com/ja-jp/library/h6bb9cz9(VS.80).aspx
        -->
    <!-- インプロセス -->
    <!--sessionState timeout="20" cookieless="false" mode="InProc"></sessionState-->
    <!--
            ステートサーバ（利用の際は、管理ツール「サービス」から、ASP.NET 状態サービスを開始しておくこと。）
            開発フェーズでステートサーバを選択しておけば、本番環境は、どのモードにも対応できる。
        -->
    <sessionState timeout="20" cookieless="false" mode="StateServer" stateConnectionString="tcpip=127.0.0.1:42424" />
    <!--
            SQLサーバ（利用の際は、以下のスクリプトを実行する）
            C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727
            ・InstallSqlState.sql（UninstallSqlState.sql）
            ・InstallPersistSqlState.sql（UninstallPersistSqlState.sql）
            
            [HOWTO]：ASP.NETで永続的なSQLServerセッション状態管理を構成する方法 
            http://support.microsoft.com/default.aspx?kbid=311209
            [HOWTO]：SQL ServerでASP.NETセッション状態管理を構成する方法 
            http://support.microsoft.com/kb/317604/ja
            
            ↓環境構築には以下のツールを使用する。
            
            ASP.NET SQL Server 登録ツール (Aspnet_regsql.exe)
            http://msdn.microsoft.com/ja-jp/library/ms229862%28VS.80%29.aspx
            
            ※ Express Editionは、SQL Server 2005以降、SQL Serverエージェントを搭載しないので利用できない。
        -->
    <!--sessionState timeout="20" cookieless="false" mode="SQLServer" 
            sqlConnectionString="Data Source=seigi-cmn-pc4;User ID=sa;Password=sa;"/-->

    <!--
            Oracleサーバ（利用の際は、以下のスクリプトを実行する）           
            C:\app\Administrator\product\11.1.0\client_1\ASP.NET\SQL
            ・InstallOracleSessionState.sql(UninstallOracleSessionState.sql)
            ・InstallOracleSessionState92.sql(UninstallOracleSessionState92.sql)
            
            Oracle Providers for ASP.NET開発者ガイド > Oracle Providers for ASP.NETのインストール
            http://otndnld.oracle.co.jp/document/products/oracle11g/111/windows/E06106-01/IntroInstallation.htm
            Oracle Providers for ASP.NET開発者ガイド > OracleSessionStateStoreクラス
            http://otndnld.oracle.co.jp/document/products/oracle11g/111/windows/E06106-01/OracleSessionStateStoreClass.htm
        -->
    <!--sessionState timeout="20" cookieless="false" mode="Custom" customProvider="MyOracleSessionStateStore">
            <providers>
                <add name="MyOracleSessionStateStore"
                     type="Oracle.Web.SessionState.OracleSessionStateStore, 
                           Oracle.Web, Version=2.111.6.20, Culture=neutral, 
                     PublicKeyToken=89b483f429c47342"
                     connectionStringName="ConnectionString_ODP"/>
            </providers>
        </sessionState-->
    <!--
            認証の設定 
            
            このセクションは、アプリケーションの認証ポリシーを設定します。
            使用できるモードは、"Windows"、"Forms"、"Passport" および "None" です。
            
            詳細は、下記URLを参照のこと。
            http://msdn2.microsoft.com/ja-jp/library/532aee0e.aspx
            http://msdn2.microsoft.com/ja-jp/library/532aee0e(VS.80).aspx
        -->
    <!-- Windows認証 -->
    <!--authentication mode="Windows"/-->
    <!-- Forms認証 -->
    <authentication mode="Forms">
      <!--
                本設定のパラメタは、別途検討すること。
                属性                      : 目的
                name                      : 認証チケットを保存するクッキーの名前に使われる。
                loginUrl                  : ログイン・フォームのURL
                defaultUrl                : 認証後のリダイレクトに使用する既定の URL を定義する。
                timeout                   : チケットの有効期間（単位：分）。
                protection                : クッキーの暗号化と検証の有無を指定（推奨値は、「All」）
                path                      : クッキーのパス（既定値は、「/」）。
                domain                    : フォーム認証 Cookie に設定するオプションのドメインを指定する。
                requireSSL                : 認証 Cookie を送信するために SSL 接続が必要かどうかを指定する（既定値は、「false」）。
                slidingExpiration         : スライド式有効期限が有効かどうかを指定する（既定値、推奨値は、「true」）。
                enableCrossAppRedirects   : アプリケーション間のフォーム認証を可能にする。
                cookieless                : Cookie を使用するかどうか、および Cookie の動作を定義する。 
                
                詳細は、下記URLを参照のこと。
                http://msdn2.microsoft.com/ja-jp/library/1d3t3c61.aspx
                http://msdn2.microsoft.com/ja-jp/library/1d3t3c61(VS.80).aspx
            -->
      <forms name="formauth" loginUrl="Aspx/Start/login.aspx" defaultUrl="Aspx/Start/menu.aspx" timeout="10" protection="All" path="/" domain="" requireSSL="false" slidingExpiration="true" enableCrossAppRedirects="false" cookieless="UseDeviceProfile" />
    </authentication>
    <!--
            権限の設定
            このセクションは、アプリケーションの権限のポリシーを設定します。
            この設定により、ユーザーまたはロールによるアプリケーション
            リソースへのアクセスを許可したり、拒否したりできます。
            ワイルドカード : "*" は全員を、"?" は匿名 (未認証) ユーザーを表します。
            
            詳細は、下記URLを参照のこと。
            http://msdn2.microsoft.com/ja-jp/library/8d82143t.aspx
            http://msdn2.microsoft.com/ja-jp/library/8d82143t(VS.80).aspx
        -->
    <authorization>
      <!-- 全ユーザーへの許可 -->
      <!--<allow users="*"/>-->
      <!-- 匿名ユーザーの禁止 -->
      <deny users="?" />
      <!--
            <allow  users="[ユーザーのコンマ区切り一覧]"
                roles="[ロールのコンマ区切り一覧]"/>
            <deny  users="[ユーザーのコンマ区切り一覧]"
                roles="[ロールのコンマ区切り一覧]"/>-->
    </authorization>
    <!-- 偽装する場合は以下を有効にする -->
    <!-- identity impersonate="true" userName="xxxx" password="xxxx" / -->
    <!--
            <customErrors> セクションは、要求の実行中にハンドルされていないエラーが発生した場合の処理方法の構成を有効にします。
            具体的には、開発者が HTML エラーページをスタック トレースのエラーの代わりに表示するように構成することを可能にします。
            ※ アプリケーションで発生した例外は、Application_Errorで全てのエラーを処理する。
            ※ HTTP状態コードに対応するHTMLを設定する場合は、ここを設定する。
            
            <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
                <error statusCode="403" redirect="NoAccess.htm" />
                <error statusCode="404" redirect="FileNotFound.htm" />
            </customErrors>
            
            詳細は、下記URLを参照のこと。
            customErrorsタグ
            http://msdn2.microsoft.com/ja-jp/library/h0hfz6fc.aspx
            http://msdn2.microsoft.com/ja-jp/library/h0hfz6fc(VS.80).aspx
            errorタグ
            http://msdn2.microsoft.com/ja-jp/library/s2f4e3e7.aspx
            http://msdn2.microsoft.com/ja-jp/library/s2f4e3e7(VS.80).aspx
        -->
    <!-- 
            ASP.NETの処理方法、実行時設定をする。
            ・maxRequestLength：POSTデータの最大値（既定値は 4,096 KB (4 MB)）
            ・executionTimeout：POST処理の実行タイムアウトを設定（既定値は 90 秒）
            詳細は、下記URLを参照のこと。
            http://msdn2.microsoft.com/ja-jp/library/e1f13641.aspx
            http://msdn2.microsoft.com/ja-jp/library/e1f13641(VS.80).aspx
    -->
    <httpRuntime targetFramework="4.6" maxRequestLength="4096" executionTimeout="90" />
    <pages>
      <namespaces>
        <add namespace="System.Web.Optimization" />
      </namespaces>
      <controls>
        <add assembly="Microsoft.AspNet.Web.Optimization.WebForms" namespace="Microsoft.AspNet.Web.Optimization.WebForms" tagPrefix="webopt" />
      </controls>
    </pages>

  </system.web>

  <!-- ファイルをForms認証対象外にする -->
  <!--JS/CSSをバンドルしたフォルダ-->
  <location path="bundles"><system.web><authorization><allow users="*" /></authorization></system.web></location>
  <!--外部ログインコールバック-->
  <location path="Aspx/OAuth2"><system.web><authorization><allow users="*" /></authorization></system.web></location>

  <system.serviceModel>
    <services>
      <service name="WebForms_Sample.JSONService">
        <endpoint address="" binding="webHttpBinding" behaviorConfiguration="MyBehavior" contract="WebForms_Sample.IJSONService" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="MyBehavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="MyBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>

  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </basicHttpBinding>
      <wsHttpBinding>
        <binding name="WSHttpBinding" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" />
          <security mode="Message">
            <transport clientCredentialType="Windows" proxyCredentialType="None" realm="" />
            <message clientCredentialType="Windows" negotiateServiceCredential="true" algorithmSuite="Default" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <client>
      <!--addressは通信制御部品の設定ファイルに定義する。-->
      <!--basicHttpBinding-->
      <endpoint address="" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding" contract="Transmission.IWCFHTTPSvcForFx" name="Transmission.WCFHTTPSvcForFx" />
      <!--wsHttpBinding-->
      <!--endpoint address="" binding="wsHttpBinding" bindingConfiguration="WSHttpBinding" contract="Transmission.IWCFHTTPSvcForFx" name="Transmission.WCFHTTPSvcForFx" /-->
      <!--netTcpBinding-->
      <endpoint address="" binding="netTcpBinding" bindingConfiguration="" contract="Touryo.Infrastructure.Framework.Transmission.IWCFTCPSvcForFx" name="Touryo.Infrastructure.Business.Transmission.WCFTCPSvcForFx" />
    </client>
  </system.serviceModel>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="EB42632606E9261F" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-11.0.0.0" newVersion="11.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.1.0.0" newVersion="3.1.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
